{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\denny\\\\Documents\\\\CSE120\\\\FromMyGitHub\\\\BART12\\\\client\\\\src\\\\Attempts\\\\1st\\\\Components\\\\notifTable.js\";\nimport React, { Component } from 'react'; //import {Link} from \"react-router-dom\";\n\nimport '../styles.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport moment from 'moment';\nimport Table from 'react-bootstrap/Table'; //table pulls data from DB [projectUpdates table]\n\nclass notifTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUpdates = () => {\n      var date = moment().utcOffset('0').format('YYYY-MM-DD');\n      console.log(date);\n      fetch(`http://localhost:4006/projUpdates/${date}`).then(response => response.json()).then(response => this.setState({\n        projectUpdates: response\n      })).catch(err => console.log(err));\n    };\n\n    this.state = {\n      //specifiy notification type [danger, info, etc]\n      projectUpdates: []\n    };\n  } //once compnent mounts data is pulled from DB\n\n\n  componentDidMount() {\n    this.getUpdates();\n  } //should just fetch from DB\n\n\n  render() {\n    const {\n      projectUpdates\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Asset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), projectUpdates.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.assetID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.projID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.updated_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: projectUpdates.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: projectUpdates.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"list-inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"list-inline-item\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"list-inline-item\",\n                  children: [\" \", props.dept, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"list-inline-item\",\n                  children: [\" \", props.meterName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"list-inline-item\",\n                  children: [\" \", props.reading, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"list-inline-item\",\n                  children: [\" \", props.date, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"...Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default notifTable;","map":{"version":3,"sources":["C:/Users/denny/Documents/CSE120/FromMyGitHub/BART12/client/src/Attempts/1st/Components/notifTable.js"],"names":["React","Component","moment","Table","notifTable","constructor","props","getUpdates","date","utcOffset","format","console","log","fetch","then","response","json","setState","projectUpdates","catch","err","state","componentDidMount","render","map","item","assetID","projID","progress","updated_at","length","dept","meterName","reading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import {Link} from \"react-router-dom\";\r\nimport '../styles.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport moment from 'moment'\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n\r\n//table pulls data from DB [projectUpdates table]\r\n\r\nclass notifTable extends Component{\r\n    \r\n   constructor(props){\r\n       super(props);\r\n       this.state = {          //specifiy notification type [danger, info, etc]\r\n        projectUpdates : []\r\n    }\r\n   }\r\n\r\n    //once compnent mounts data is pulled from DB\r\n    componentDidMount(){\r\n        this.getUpdates();\r\n    }\r\n\r\n    //should just fetch from DB\r\n    getUpdates = () => {\r\n\r\n        var date = moment().utcOffset('0').format('YYYY-MM-DD');\r\n        console.log(date)\r\n\r\n        fetch(`http://localhost:4006/projUpdates/${date}`)\r\n            .then(response => response.json())\r\n            .then(response => this.setState({projectUpdates:response}))\r\n            .catch(err => console.log(err))\r\n    } \r\n\r\n\r\n\r\n    render(){\r\n        const {projectUpdates} = this.state;\r\n        console.log(this.state)\r\n\r\n        return(\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Asset</th>\r\n                        <th>Project</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    {projectUpdates.map ((item)=>{\r\n                            return(\r\n                                <tr>\r\n                                    <li>{item.assetID}</li>\r\n                                    <li>{item.projID}</li>\r\n                                    <li>{item.progress}</li>\r\n                                    <li>{item.updated_at}</li>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                </thead>\r\n                <tbody>\r\n                    {projectUpdates.length ? (\r\n                        <div>\r\n                            {projectUpdates.map((item) => {\r\n                                return (\r\n                                    <div>\r\n                                        <th className = \"list-inline\" >\r\n                                            <td class=\"list-inline-item\"> {}</td>\r\n                                            <td class=\"list-inline-item\"> {props.dept} </td>\r\n                                            <td class=\"list-inline-item\"> {props.meterName} </td>\r\n                                            <td class=\"list-inline-item\"> {props.reading} </td>\r\n                                            <td class=\"list-inline-item\"> {props.date} </td>\r\n                                        </th>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    ):(<div>\r\n                        ...Loading\r\n                    </div>)}\r\n                        \r\n                </tbody>\r\n            </Table>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default notifTable;\r\n"]},"metadata":{},"sourceType":"module"}